name: Resolve which editions should build
inputs:
  scope:
    description: Include `test` sh files like assert.sh , otherwise, only standard utils
    type: boolean
    options:
      - test
      - run
    required: false
    default: 'run'
  export-files:
    description: Copies utils files to temp 'outputs.folder'
    type: boolean
    required: false
    default: 'true'
outputs:
  sources:
    value: ${{ steps.export-scripts.outputs.export-sources }}
  folder:
    value: ${{ steps.export-scripts.outputs.export-folder }}
  path:
    value: ${{ steps.export-scripts.outputs.export-path }}

runs:
  using: "composite"
  steps:
    - shell: bash
      id: export-scripts
      run: |
        UTIL_SCRIPTS="${{ github.action_path }}/scripts"

        if [[ "${{ inputs.scope }}" == "test" ]]; then
          curl --silent https://raw.githubusercontent.com/hazelcast/assert.sh/main/assert.sh > "${UTIL_SCRIPTS}/assert.sh"
        fi

        # Combine all file contents and add newline end of each file
        SOURCES=$(sed -s -e '${p;g;}' ${UTIL_SCRIPTS}/*.sh)

        # Use base64 as suggested here https://github.com/orgs/community/discussions/106666#discussioncomment-8398345
        #
        # 1. Ensures GitHUb doesn't reformat content especially with `logging.functions.sh` where we use GitHub commands
        # 2. Without base64 the output needs to be set as multiline so having single bas64 line is simpler
        #
        # base64 ensures we future proof without worrying about file contents
        #
        SOURCES=$(echo -n "${SOURCES}" | base64 -w 0)
        echo "export-sources=${SOURCES}" >> ${GITHUB_OUTPUT}

        if [[ "${{ inputs.export-files }}" == 'true' ]]; then
          TEMP_FOLDER=$(mktemp -d)
          find "${UTIL_SCRIPTS}" -name "*.sh" -type f -print0 | xargs -0 cp -t "${TEMP_FOLDER}"
          echo "export-folder=${TEMP_FOLDER}" >> ${GITHUB_OUTPUT}
          echo "export-path=${TEMP_FOLDER}:$PATH" >> ${GITHUB_OUTPUT}
        fi